{"version":3,"file":"4.70502227ca5b593a9189.hot-update.js","sources":["webpack:///pages/start.js"],"sourcesContent":["import Layout from '../components/Layout';\r\nimport Navbar from '../components/Navbar';\r\nimport stylesheet from '../styles/about.scss';\r\nimport fetch from 'isomorphic-unfetch'\r\nimport React, { Component } from 'react'\r\nimport { startOfDay } from 'date-fns';\r\n\r\nconst initialState = {\r\n  submitting: false,\r\n  submitted: false,\r\n  startForm: {\r\n    name: \"\",\r\n    email: \"\",\r\n    tel: \"\",\r\n    startDate: \"\",\r\n    billing: \"\",\r\n    budget: \"\",\r\n    description: \"\",\r\n    personalNeeded: \"\"\r\n  }\r\n} \r\n\r\nclass Start extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...initialState\r\n    }\r\n    this.handleChange = this.handleInputChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  submitForm(event) {\r\n    event.preventDefault();\r\n    const { startForm } = this.state;\r\n    this.setState({ submitting: true })\r\n    fetch('/api/projects', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(startForm)\r\n    }).then((response) => {\r\n      response.json().then((res) => {\r\n        if (res.status === 201 && res.success === true) {\r\n          this.setState({ submitted: true })\r\n          this.setState(initialState)\r\n          alert('Project request has sent!');\r\n        } else {\r\n          this.setState({ submitting: false });\r\n          alert('Internal server error');\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  handleInputChange(newPartialInput) {\r\n    this.setState(state => ({\r\n      ...state,\r\n      startForm: {\r\n        ...state.startForm,\r\n        ...newPartialInput\r\n      }\r\n    }))\r\n    console.log(this.state.startForm)\r\n  }\r\n\r\n  render() {\r\n    const { startForm } = this.state;\r\n    return (\r\n    <Layout title=\"Start a Project | Charisol Technologies\" ontent=\"At Charisol, we approach every project with deep commitment and passion, applying meticulous detail + craftsmanship at every stage of product development\">\r\n    <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\r\n    <div id=\"panel\" data-slideout-ignore>\r\n        <section className=\"start\">\r\n          <Navbar />\r\n            <div className=\"container\">\r\n              <div className=\"content\">\r\n                <div className=\"text-content\">\r\n                  <span className=\"heading-wrapper\">\r\n                      <h1 className=\"heading no-reveal\">\r\n                        Start a Project\r\n                      </h1>\r\n                  </span>\r\n                  <span className=\"sub-text-wrapper\">\r\n                <p className=\"sub-text no-reveal\">\r\n                Give us a background of your project and we will provide all the technical support\r\n                needed to make bring it to life\r\n                                </p>\r\n              </span>\r\n                  \r\n                  <div>\r\n                    <form id=\"start-form\" onSubmit={this.submitForm}>\r\n                      <div className=\"row\">\r\n                        <div className=\"six columns\">\r\n                          <div className=\"div\">\r\n                            <label htmlFor=\"name\">Name</label>\r\n                            <input className=\"u-full-width\" value={startForm.name} onChange={e => this.handleInputChange({ name: e.target.value })} type=\"text\" id=\"name\" name=\"name\" required />\r\n                            <p className=\"light\"><em>Tip: Could be your fullname or company name.</em></p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"six columns\">\r\n                          <div className=\"div\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input className=\"u-full-width\" value={startForm.email} onChange={e => this.handleInputChange({ email: e.target.value })} type=\"email\" id=\"email\" name=\"email\" required />\r\n                            <p className=\"light\"><em>Tip: Could be your personal email address or company email address.</em></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"six columns\">\r\n                          <div className=\"div\">\r\n                            <label htmlFor=\"tel\">Tel</label>\r\n                            <input className=\"u-full-width\" value={startForm.tel} onChange={e => this.handleInputChange({ tel: e.target.value })} type=\"number\" id=\"tel\" name=\"tel\" required />\r\n                            <p className=\"light\"><em>Tip: Could be your personal telephone number or company  telephone number.</em></p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"six columns\">\r\n                          <div className=\"div\">\r\n                            <label htmlFor=\"date\">Start Date</label>\r\n                            <input className=\"u-full-width date\" value={startForm.startDate} onChange={e => this.handleInputChange({ startDate: e.target.value })} type=\"date\" id=\"date\" name=\"start_date\" required />\r\n                            <p className=\"light\"><em>Tip: This is the proposed start date of the project.</em></p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"div\">\r\n                        <label htmlFor=\"project_description\">Project Description (Tell us what kind of website you want to build)</label>\r\n                        <textarea className=\"u-full-width\"  value={startForm.description} onChange={e => this.handleInputChange({ description: e.target.value })} id=\"message\" rows=\"8\" name=\"project_description\" required></textarea>\r\n                        <p className=\"light\"><em>Tip: Who are your Customers or Website visitors? What can they accomplish when they come to your website?</em></p>\r\n                      </div>\r\n                      <div>\r\n                        <label htmlFor=\"personal\">How did you hear about us</label>\r\n                        <textarea className=\"u-full-width\" value={startForm.personalNeeded.budget} onChange={e => this.handleInputChange({ personalNeeded: e.target.value })} id=\"personal\" rows=\"8\" name=\"personal\" required></textarea>\r\n                        <p className=\"light\"><em>Tip: This could be a mix of frontend / backend engineers, UI/UX designers, project managers, etc.</em></p>\r\n                      </div>\r\n                      <button className=\"m-t-lg btn-curve-purple full\" type=\"submit\" value=\"Submit\">Submit</button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n     </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Start\n\n\n// WEBPACK FOOTER //\n// pages/start.js"],"mappings":"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","sourceRoot":""}