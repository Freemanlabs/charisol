{"version":3,"file":"4.a85cb0d1f5a100c3442e.hot-update.js","sources":["webpack:///pages/admin-home.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Chip from '@material-ui/core/Chip';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport AdminLayout from '../components/admin/Layout';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Avatar from '@material-ui/core/Avatar';\nimport Icon from '@material-ui/core/Icon';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nclass Option extends React.Component {\n  handleClick = event => {\n    this.props.onSelect(this.props.option, event);\n  };\n\n  render() {\n    const { children, isFocused, isSelected, onFocus } = this.props;\n\n    return (\n      <MenuItem\n        onFocus={onFocus}\n        selected={isFocused}\n        onClick={this.handleClick}\n        component=\"div\"\n        style={{\n          fontWeight: isSelected ? 500 : 400,\n        }}\n      >\n        {children}\n      </MenuItem>\n    );\n  }\n}\n\nfunction SelectWrapped(props) {\n  const { classes, ...other } = props;\n\n  return (\n    <Select\n      optionComponent={Option}\n      noResultsText={<Typography>{'No results found'}</Typography>}\n      arrowRenderer={arrowProps => {\n        return arrowProps.isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />;\n      }}\n      clearRenderer={() => <ClearIcon />}\n      valueComponent={valueProps => {\n        const { value, children, onRemove } = valueProps;\n\n        const onDelete = event => {\n          event.preventDefault();\n          event.stopPropagation();\n          onRemove(value);\n        };\n\n        if (onRemove) {\n          return (\n            <Chip\n              tabIndex={-1}\n              label={children}\n              className={classes.chip}\n              deleteIcon={<CancelIcon onTouchEnd={onDelete} />}\n              onDelete={onDelete}\n            />\n          );\n        }\n\n        return <div className=\"Select-value\">{children}</div>;\n      }}\n      {...other}\n    />\n  );\n}\n\nconst ITEM_HEIGHT = 48;\nconst valueSkillBind = [];\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    width: '60%',\n    margin: '30px auto'\n\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  },\n\n  bigAvatar: {\n    width: 100,\n    height: 100,\n    margin: '10px auto'\n  },\n  // We had to use a lot of global selectors in order to style react-select.\n  // We are waiting on https://github.com/JedWatson/react-select/issues/1679\n  // to provide a much better implementation.\n  // Also, we had to reset the default style injected by the library.\n  '@global': {\n    '.Select-control': {\n      display: 'flex',\n      alignItems: 'center',\n      border: 0,\n      height: 'auto',\n      background: 'transparent',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    },\n    '.Select-multi-value-wrapper': {\n      flexGrow: 1,\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    '.Select--multi .Select-input': {\n      margin: 0,\n    },\n    '.Select.has-value.is-clearable.Select--single > .Select-control .Select-value': {\n      padding: 0,\n    },\n    '.Select-noresults': {\n      padding: theme.spacing.unit * 2,\n    },\n    '.Select-input': {\n      display: 'inline-flex !important',\n      padding: 0,\n      height: 'auto',\n    },\n    '.Select-input input': {\n      background: 'transparent',\n      border: 0,\n      padding: 0,\n      cursor: 'default',\n      display: 'inline-block',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      margin: 0,\n      outline: 0,\n    },\n    '.Select-placeholder, .Select--single .Select-value': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(16),\n      padding: 0,\n    },\n    '.Select-placeholder': {\n      opacity: 0.42,\n      color: theme.palette.common.black,\n    },\n    '.Select-menu-outer': {\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[2],\n      position: 'absolute',\n      left: 0,\n      top: `calc(100% + ${theme.spacing.unit}px)`,\n      width: '100%',\n      zIndex: 2,\n      maxHeight: ITEM_HEIGHT * 4.5,\n    },\n    '.Select.is-focused:not(.is-open) > .Select-control': {\n      boxShadow: 'none',\n    },\n    '.Select-menu': {\n      maxHeight: ITEM_HEIGHT * 4.5,\n      overflowY: 'auto',\n    },\n    '.Select-menu div': {\n      boxSizing: 'content-box',\n    },\n    '.Select-arrow-zone, .Select-clear-zone': {\n      color: theme.palette.action.active,\n      cursor: 'pointer',\n      height: 21,\n      width: 21,\n      zIndex: 1,\n    },\n    // Only for screen readers. We can't use display none.\n    '.Select-aria-only': {\n      position: 'absolute',\n      overflow: 'hidden',\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      width: 1,\n      margin: -1,\n    },\n  },\n});\n\nconst initialState = {\n  submitting: false,\n  submitted: false,\n  input: {\n    firstName: \"\",\n    lastName: \"\",\n    image_url: \"\",\n    phoneNumber: \"\",\n    description: \"\",\n    position: \"\",\n    gender: \"\",\n    email: \"\",\n    address: \"\",\n    biography: \"\",\n    githubUsername: \"\",\n    skills: []\n  },\n  currentUser: {},\n  allSkills: []\n}\n\n\nclass AdminHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      currentUserId: props.url.query._id,\n      single: null,\n      multi: null,\n      multiLabel: null,\n      open: false,\n      vertical: null,\n      horizontal: null,\n      valueSkillBind: []\n    }\n    this.submitForm = this.submitForm.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    \n  }\n\n  handleChange = name => value => {\n    const params = value.map(el => {\n      return el['value']\n    })\n   const newPartialInput = {[name]: params}\n    this.setState(state => ({\n      ...state,\n      input: {\n        ...state.input,\n        ...newPartialInput\n      }\n    }))\n  };\n\n  getSkills() {\n    fetch(`/api/get-skills`)\n      .then((res) => res.json())\n      .then((data) => {\n        let suggestion =  data.map(suggestion => ({\n          value: suggestion._id,\n          label: suggestion.name,\n        }));\n        this.setState({allSkills: suggestion})\n      }\n    )\n  }\n\n\n  componentDidMount() {\n    this.getSkills();\n    this.getUser();\n  }\n\n \n\n  getUserLocally() {\n    return JSON.parse(localStorage.getItem('user'))\n  }\n  \n  setUserLocally(user) {\n    localStorage.setItem('user', JSON.stringify(user))\n    return user\n  }\n\n\n\n  getUser() {\n     let userId = this.state.currentUserId;\n    fetch(`/api/team/${userId}`)\n      .then((res) => res.json())\n      .then((user) => {\n        this.setState({ input: user})\n        this.setState( {valueSkillBind: user.skills.map(suggestion => ({\n          value: suggestion._id,\n          label: suggestion.name,\n        }))});\n        console.log(this.state.valueSkillBind);\n        this.setUserLocally(user);\n      })\n  }\n \n  getUserInfo(userInfo) {\n    this.setState({user: userInfo})\n  }\n\n\n  handleInputChange = newPartialInput  => {\n    this.setState(state => ({\n      ...state,\n      input: {\n        ...state.input,\n        ...newPartialInput\n      }\n    }))\n  }\n\n  handleClose = (event) => {\n    this.setState({ open: false });\n  };\n\n\n\n\n  submitForm(event) {\n    this.setState({ submitted: true })\n    event.preventDefault();\n    const { input } = this.state;\n    this.setState({ submitting: true })\n    fetch(`/api/team/${this.state.currentUserId}`, {\n      method: 'put',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(input)\n    }).then((response) => {\n      response.json().then((res) => {\n        if (res.status === 201 && res.success === true) {\n          this.setState({ submitting: false, vertical: 'top', horizontal: 'center', open: true });\n        } else {\n          this.setState({ submitting: false, vertical: 'top', horizontal: 'center', open: true });\n        }\n      })\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const  {input, open, vertical, horizontal, valueSkillBind}  = this.state;\n    console.log(valueSkillBind);\n \n    return (\n      <AdminLayout>\n        <div className={classes.root}>\n          <Avatar\n            alt=\"Adelle Charles\"\n            src={input.image_url}\n            className={classes.bigAvatar}\n          />\n          <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={open}\n          onClose={this.handleClose}\n          autoHideDuration={6000}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          action={[\n            <Icon onClick={this.handleClose}>close</Icon>\n          ]}\n          message={<span id=\"message-id\">Updated</span>}\n        />\n\n          <form onSubmit={this.submitForm}>\n            <Card className={classes.card}>\n              <CardContent>\n              \n                <Grid container spacing={24} alignItems=\"center\">\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true}>\n                      <InputLabel  htmlFor=\"input-with-icon-adornment\">Enter First Name</InputLabel>\n                      <Input value={input.firstName} onChange={(e) => this.handleInputChange({ firstName: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true}>\n                      <InputLabel  htmlFor=\"input-with-icon-adornment\">Enter Last Name</InputLabel>\n                      <Input value={input.lastName} onChange={(e) => this.handleInputChange({ lastName: e.target.value })} fullWidth={true}\n                        id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircle />\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={24} alignItems=\"center\">\n                  <Grid item xs={8} sm={6}>\n                    <FormControl  className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Email</InputLabel>\n                      <Input value={input.email} onChange={(e) => this.handleInputChange({ email: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>email </Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel  htmlFor=\"input-with-icon-adornment\">Enter Phone Number</InputLabel>\n                      <Input value={input.phoneNumber} onChange={(e) => this.handleInputChange({ phoneNumber: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>phone</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={24} alignItems=\"center\">\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Github username</InputLabel>\n                      <Input value={input.githubUsername} value={input.githubUsername} onChange={(e) => this.handleInputChange({ githubUsername: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>code</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Slogan</InputLabel>\n                      <Input value={input.slogan} onChange={(e) => this.handleInputChange({ slogan: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>format_quote</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n\n                <Grid container spacing={24} alignItems=\"center\">\n                  <Grid item xs={8} sm={6}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\" placeholder=\"As written on your contract\">Position</InputLabel>\n                      <Input value={input.position} onChange={(e) => this.handleInputChange({ position: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>filter_1</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n\n\n                  <Grid item xs={8} sm={6}>\n                 \n                    <TextField  fullWidth={true} value={this.state.user.skills} onChange={this.handleChange('skills')}\n                      label=\"Select Skills\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n\n                      InputProps={{\n                        inputComponent: SelectWrapped,\n                        inputProps: {\n                          classes,\n                          multi: true,\n                          instanceId: 'react-select-chip-label',\n                          id: 'react-select-chip-label',\n                          options: this.state.allSkills,\n                        },\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={24} alignItems=\"center\">\n                  <Grid item xs={8} sm={12}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\" placeholder=\"As written on your contract\">Biography</InputLabel>\n                      <Input value={input.biography} onChange={(e) => this.handleInputChange({ biography: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        multiline\n                        rowsMax=\"10\"\n                        rows=\"10\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>book</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={8} sm={12}>\n                    <FormControl className={classes.margin} fullWidth={true} >\n                      <InputLabel htmlFor=\"input-with-icon-adornment\" >Current Address</InputLabel>\n                      <Input value={input.address} onChange={(e) => this.handleInputChange({ address: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                        multiline\n                        rowsMax=\"10\"\n                        rows=\"5\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <Icon>add_location</Icon>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                <FormControl style={{ marginTop: 20 }} fullWidth={true} >\n                {this.state.submitting ? (<LinearProgress color=\"secondary\" />) : ('')}\n                <Button variant=\"raised\" type=\"submit\"  size=\"large\" color=\"primary\" className={classes.button}> Update</Button>\n                </FormControl>\n              </CardContent>\n            </Card>\n          </form>\n        </div>\n      </AdminLayout>\n    );\n  }\n}\n\nAdminHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdminHome);\n\n\n// WEBPACK FOOTER //\n// pages/admin-home.js"],"mappings":"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","sourceRoot":""}