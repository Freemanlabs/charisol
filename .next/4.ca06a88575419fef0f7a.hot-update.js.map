{"version":3,"file":"4.ca06a88575419fef0f7a.hot-update.js","sources":["webpack:///pages/users.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport 'react-select/dist/react-select.css';\nimport Dashboard from '../components/admin/Dashboard';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\n\n\nconst initialState = {\n  submitting: false,\n  submitted: false,\n  currentUser: {},\n  users: []\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    width: '90%',\n    margin: '30px auto'\n  },\n\n  button: {\n    margin: theme.spacing.unit,\n  },\n \n\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  }\n});\n\n\nclass AdminProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState\n    }\n    // this.submitForm = this.submitForm.bind(this);\n    // this.handleClose = this.handleClose.bind(this);\n  }\n\n  getUsers() {\n    fetch(`/api/get-teams`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ users: data })\n      }\n      )\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUserLocally() {\n    return JSON.parse(localStorage.getItem('user'))\n  }\n\n  setUserLocally(user) {\n    localStorage.setItem('user', JSON.stringify(user))\n    return user\n  }\n\n  getUserInfo(userInfo) {\n    this.setState({ user: userInfo })\n  }\n\n\n  handleInputChange = newPartialInput => {\n    this.setState(state => ({\n      ...state,\n      input: {\n        ...state.input,\n        ...newPartialInput\n      }\n    }))\n  }\n\n\n\n\n\n  render() {\n    const { classes } = this.props;\n    const { input, open, vertical, horizontal, valueSkillBind } = this.state;\n\n\n    return (\n      <Dashboard>\n        <div className={classes.root}>\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={this.handleClose}\n            autoHideDuration={6000}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            action={[\n              <Icon onClick={this.handleClose}>close</Icon>\n            ]}\n            message={<span id=\"message-id\">Updated</span>}\n          />\n          <Grid container spacing={24} alignItems=\"center\">\n            <Grid item xs={8} sm={12}>\n              <Paper className={classes.root}>\n                <Table className={classes.table}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>First Name</TableCell>\n                      <TableCell>Last Name</TableCell>\n                      <TableCell>Email</TableCell>\n                      <TableCell>Phone Number</TableCell>\n                      <TableCell>Position</TableCell>\n                      <TableCell>Action</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.users.map(n => {\n                      return (\n                        <TableRow key={n._id}>\n                          <TableCell >{n.firstName}</TableCell>\n                          <TableCell >{n.lastName}</TableCell>\n                          <TableCell >{n.email}</TableCell>\n                          <TableCell >{n.phoneNumber}</TableCell>\n                          <TableCell >{n.position}</TableCell>\n                          <TableCell>\n                          <IconButton color=\"secondary\" className={classes.button} aria-label=\"delete\">   \n                            <Icon>delete</Icon>\n                          </IconButton>\n                          <IconButton  className={classes.button} aria-label=\"delete\">   \n                            <Icon>create</Icon>\n                          </IconButton>\n                        </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </Paper>\n            </Grid>\n          </Grid>\n\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nAdminProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdminProfile);\n\n\n// WEBPACK FOOTER //\n// pages/users.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAKA;AACA;AADA;AAbA;AAAA;AACA;AAkBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAAA;AAEA;AAFA;AAAA;AAOA;AA5CA;AAEA;AAIA;AACA;AAPA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAanHA;AACA;AAqHA;AACA;AADA;AACA;AAGA;AACA;AADA;;;;;;;;;;;;AApJA;AAOA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}