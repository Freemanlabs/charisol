{"version":3,"file":"7.37e9f8f9a6a00cbb88ac.hot-update.js","sources":["webpack:///pages/admin-skill.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport 'react-select/dist/react-select.css';\nimport Dashboard from '../components/admin/Dashboard';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\n\n\nconst initialState = {\n  submitting: false,\n  submitted: false,\n  input: {\n    name: \"\",\n    description: \"\"\n  },\n  currentUser: {},\n  allSkills: []\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    width: '90%',\n    margin: '30px auto'\n\n  },\n \n\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  }\n});\n\n\nclass AdminProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState\n    }\n    this.submitForm = this.submitForm.bind(this);\n    // this.handleClose = this.handleClose.bind(this);\n  }\n\n  getSkills() {\n    fetch(`/api/get-skills`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ allSkills: data })\n      }\n      )\n  }\n\n  componentDidMount() {\n    this.getSkills();\n  }\n\n  getUserLocally() {\n    return JSON.parse(localStorage.getItem('user'))\n  }\n\n  setUserLocally(user) {\n    localStorage.setItem('user', JSON.stringify(user))\n    return user\n  }\n\n  getUserInfo(userInfo) {\n    this.setState({ user: userInfo })\n  }\n\n\n  handleInputChange = newPartialInput => {\n    this.setState(state => ({\n      ...state,\n      input: {\n        ...state.input,\n        ...newPartialInput\n      }\n    }))\n  }\n\n\n\n  submitForm(event) {\n    this.setState({ submitted: true })\n    event.preventDefault();\n    const { input } = this.state;\n    this.setState({ submitting: true })\n    fetch(`/api/skill`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(input)\n    }).then((response) => {\n      response.json().then((res) => {\n        if (res.status === 201 && res.success === true) {\n          this.setState({ submitting: false, vertical: 'top', horizontal: 'center', open: true });\n          this.getSkills();\n        } else {\n          this.setState({ submitting: false, vertical: 'top', horizontal: 'center', open: true });\n        }\n      })\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { input, open, vertical, horizontal, valueSkillBind } = this.state;\n\n\n    return (\n      <Dashboard  pageName=\"Manage Skills\">\n        <div className={classes.root}>\n          <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={this.handleClose}\n            autoHideDuration={6000}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            action={[\n              <Icon onClick={this.handleClose}>close</Icon>\n            ]}\n            message={<span id=\"message-id\">Updated</span>}\n          />\n          <Grid container spacing={24} alignItems=\"center\">\n            <Grid item xs={8} sm={6}>\n              <Paper className={classes.root}>\n                <Table className={classes.table}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Name</TableCell>\n                      <TableCell>Description</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.allSkills.map(n => {\n                      return (\n                        <TableRow key={n._id}>\n                          <TableCell >{n.name}</TableCell>\n                          <TableCell >{n.description}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </Paper>\n            </Grid>\n            <Grid item xs={8} sm={6}>\n            \n              <form onSubmit={this.submitForm}>\n              <Typography variant=\"title\" gutterBottom>Create Skillset</Typography>\n                <Card className={classes.card}>\n                \n                  <CardContent>\n                    \n                    <Grid container spacing={24} alignItems=\"center\">\n                      <Grid item xs={8} sm={6}>\n                        <FormControl className={classes.margin} fullWidth={true}>\n                          <InputLabel htmlFor=\"input-with-icon-adornment\">Enter Name</InputLabel>\n                          <Input value={input.name} onChange={(e) => this.handleInputChange({ name: e.target.value })} fullWidth={true} id=\"input-with-icon-adornment\"\n                            startAdornment={\n                              <InputAdornment position=\"start\">\n\n                              </InputAdornment>\n                            }\n                          />\n                        </FormControl>\n                      </Grid>\n                      <Grid item xs={8} sm={6}>\n                        <FormControl className={classes.margin} fullWidth={true}>\n                          <InputLabel htmlFor=\"input-with-icon-adornment\">Enter  description</InputLabel>\n                          <Input value={input.description} onChange={(e) => this.handleInputChange({ description: e.target.value })} fullWidth={true}\n                            id=\"input-with-icon-adornment\"\n                            startAdornment={\n                              <InputAdornment position=\"start\">\n\n                              </InputAdornment>\n                            }\n                          />\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n\n                    <FormControl style={{ marginTop: 20 }} fullWidth={true} >\n                      {this.state.submitting ? (<LinearProgress color=\"secondary\" />) : ('')}\n                      <Button variant=\"raised\" type=\"submit\" size=\"large\" color=\"primary\" className={classes.button}>Create</Button>\n                    </FormControl>\n                  </CardContent>\n                </Card>\n              </form>\n            </Grid>\n          </Grid>\n\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nAdminProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdminProfile);\n\n\n// WEBPACK FOOTER //\n// pages/admin-skill.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AARA;AACA;AAUA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AASA;AACA;AADA;AAVA;AAAA;AACA;AAeA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAAA;AAEA;AAFA;AAAA;AAOA;AA5CA;AAEA;AAGA;AACA;AANA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAatKA;AACA;AAwKA;AACA;AADA;AACA;AAGA;AACA;AADA;;;;;;;;;;;;AAxMA;AAWA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}