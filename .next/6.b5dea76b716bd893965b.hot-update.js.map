{"version":3,"file":"6.b5dea76b716bd893965b.hot-update.js","sources":["webpack:///pages/post.js"],"sourcesContent":["import React, { Fragment } from 'react'\r\nimport BlockContent from '@sanity/block-content-to-react'\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport Link from 'next/link'\r\nimport { format } from 'date-fns'\r\nimport client from '../client'\r\nimport Layout from '../components/Layout';\r\nimport Navbar from '../components/Navbar';\r\nimport stylesheet from '../styles/about.scss';\r\n\r\nconst builder = imageUrlBuilder(client)\r\nfunction urlFor(source) {\r\n  return builder.image(source)\r\n}\r\n\r\nconst serializers = {\r\n  types: {\r\n    image: ({ node: { asset } }) => (\r\n      <picture>\r\n        <img\r\n          style={{ width: \"100%\",margin:\"0 auto 20px\" }}\r\n          srcSet={`\r\n            ${urlFor(asset).width(320)} 320w,\r\n            ${urlFor(asset).width(480)} 480w,\r\n            ${urlFor(asset).width(800)} 800w\r\n          `}\r\n          sizes={`\r\n            (max-width: 320px) 280px,\r\n            (max-width: 480px) 440px,\r\n            800px\r\n          `}\r\n          src={urlFor(asset)}\r\n        />\r\n      </picture>\r\n    )\r\n  }\r\n};\r\n\r\nconst CommaJoiner = ({ list = [], conjuction = 'and', separator = ',' }) => <Fragment>{list.map((item, index) => <span key={item}>{item}{\r\n  (list.length === 1) ? '.' :\r\n  (index + 2 === list.length) ? ` ${conjuction} ` :\r\n  (index + 1 === list.length) ? '.' : `${separator} `\r\n  }\r\n  </span>)\r\n}</Fragment>\r\n\r\nconst BlogPost = ({ title = 'No title', name = 'No name', publishedAt='', categories = [], authorImage = {}, body = [], _updatedAt = '' }) => (\r\n  <Layout  title={title}> \r\n   <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\r\n   <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\r\n\t  <div id=\"panel\"  data-slideout-ignore>\r\n\t\t  <section className=\"pricing\">\r\n\t\t  <Navbar />\r\n\t\t\t<div className=\"content\">\r\n\t\t\t  <div className=\"row\">\r\n\t\t\t\t<div className=\"pricing-text-wrapper\">\r\n\t\t\t\t  <div className=\"text-content\">\r\n  \r\n  <div className=\"post-content\">\r\n  <div><img src={urlFor(authorImage).width(50).url()} /></div>\r\n  <h1>{title}</h1>\r\n  <i className=\"fa fa-pencil\"></i> Written by <span>{name}</span> in <span>{categories.length &&  <CommaJoiner list={categories} />}</span> on {format(publishedAt, 'MMMM DD, YYYY')}\r\n  <div className=\"resp\"><BlockContent\r\n    serializers={serializers}\r\n    blocks={body}\r\n    imageOptions={{w: 660, h: 435, fit: 'min'}}\r\n    projectId={client.clientConfig.projectId}\r\n    dataset={client.clientConfig.dataset}\r\n  /></div>\r\n  <i className=\"fa fa-arrow-left\"></i><Link href=\"/blog\"><a>Back to Blog</a></Link>\r\n  </div>\r\n\r\n\r\n</div></div>\r\n\t\t\t\t</div>\r\n          </div>\r\n      </section>\r\n    </div>\r\n\t\r\n\t<style jsx>{`\r\n\t.text-content{\r\n\t\t  text-align:center;\r\n\t  }\r\n\t  \r\n      .text-content span{\r\n\t\t  font-weight: 600;\r\n\t\t  color: #B721FF;\r\n\t\t  font-style:normal;\r\n\t  }\r\n\t  .post-content img{\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\tmax-width: 100%;\r\n    height: auto;\r\n\t  }\r\n\t  .post-content i{\r\n    color:#1EAEDB;\r\n\t  }\r\n\t  .resp{\r\n  max-width: 740px;\r\n  width:100%;\r\n    height: auto;\r\n\tdisplay:block;\r\n\ttext-align:justify;\r\n\tmargin-left:auto;\r\n  margin-right:auto;\r\n  margin-top:20px;\r\n    }\r\n\t  \r\n    `}</style>\r\n\t\r\n\t\r\n</Layout>\r\n)\r\n\r\nBlogPost.getInitialProps = async (req) => {\r\n  return await client.fetch(`*[slug.current == $slug][0]{\r\n      title,\r\n      \"name\": author->name,\r\n      \"categories\": categories[]->title,\r\n      \"authorImage\": author->image,\r\n\t  publishedAt,\r\n      body,\r\n      _updatedAt\r\n    }`, {slug: req.query.slug})\r\n    client.fetch.catch(function(error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport default BlogPost\n\n\n// WEBPACK FOOTER //\n// pages/post.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AAKA;AAZA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AADA;AACA;AAstBA;AAAA;AAAA;AADA;AACA;AAqEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;;;;;;;;;;;;AAzHA;AACA;AAIA;AAuBA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}